-------------------------------------------------------------------------------

[firstapp에서 진행]
1. http://127.0.0.1:8000/first/01_html/ 링크 처리
- 함수명 : htmlview01
- html 위치 : templates/firstapp/front/01_html.html
- 내용은 : "FirstApp - 01_html 페이지 입니다."

- firstapp의 index.html에서 [01_html 바로가기] 링크 생성하여 연결
- 01_html.html 내용 하단에 [FirstApp 바로가기] 링크 생성

-------------------------------------------------------------------------------

2. frontapp 생성하기
- http://127.0.0.1:8000/front/ 링크처리
- 함수명 : index
- 사용할 html 파일명 : index.html
- mainapp의 index.html에 [FrontApp 바로가기] 를 통해서 접근하기
- frontapp의 index.html에는 [MainApp 바로가기] 링크 처리하기

**URL
- http://127.0.0.1:8000 : root URL 이라고 칭합니다. (또는 root경로)
- (Back-end 영역 = 프로그램 영역)urls.py에서는  root URL을 ""빈공간으로 표현
- (Front-end 영역 = 브라우저 영역)html에서는 root URL을 "/"로 표현
- root URL을 서버주소라고 칭합니다.
- root URL뒤에 작성되는 경로는 페이지주소, 즉 URL패턴을 의미
   예시 : http://127.0.0.1:8000/front -> front는 URL 패턴 페이지 주소
- render 함수 : 사용자의 요청(request)과 Back-end 프로그램 변수들(딕셔너리{})을 이용해서
                     html에 넣는 작업을 수행합니다.
- <p></p>
   p태그는 문장에서 문단, 즉 단락을 나누는 역할을 수행하는 태그입니다.
   줄바꿈을 해도 한줄로만 인식하는 태그입니다. 
   텍스트 굵기는 볼드체(굵게)를사용합니다.
- <br/>
   줄바꿈 하려면 br 태그를 사용해야합니다.
- <hr/>
   선 긋기
- <pre></pre>
   pre 태그는 내가 작성한 모양 그대로 출력해줍니다.
  줄바꿈도 자동으로 해줍니다.
  들여쓰기도 자동으로 됩니다.
  텍스트 굵기는 가장 기본 굵기를 사용합니다.
- <a>
   a태그는 정적태그라고 칭합니다.
   정적 프로그래밍(Javascript)이 내부적으로 처리됩니다.
   실제 프로그램 : location.href = ""

-------------------------------------------------------------------------------

[frontapp에서 진행]
1. /front/01_html/  요청 처리
- 함수명 : htmlview01
- 응답 내용 : "01_html 페이지 입니다."라는 문구를 브라우저에 보여주기
- 사용할 html 위치 : html 폴더 하위에 01_html.html 생성하여 사용
- frontapp의 index.html에서 [01_html 바로가기] 링크로 접근하기
- 01_html.html 페이지 가장 상단에는 [FrontApp 바로가기] 링크 생성

-------------------------------------------------------------------------------

Front-end 영역 [html, css, javascript] 설명

- HTML : 브라우저 그림 그리기(텍스트, 이미지, 동영상 등)
            : 구조(뼈대)를 그린다고 생각하시면 됩니다.

- CSS : 구조(뼈대)에 이쁘게 포장하는 역할 수행
         : 스타일을 입히는 기능 수행
         : 텍스트()에 대한 스타일 지정
         : 이미지의 모양 스타일 지정
         : 구조의 레이아웃 위치 등 지정하여 배치 설정

- Javascript : 페이지 전환이나 이벤트(마우스클릭, 키보드클릭 등)처리 
                  프로그램입니다.(C프로그램 문법과 유사)

- Front-end 페이지는 정적페이지와 동적페이지로 구분합니다.
  정적페이지 : HTML과 CSS로만 작성된 페이지
		  : Back-end 영역에서 데이터 사용안함

  동적페이지 : HTML + CSS + Javascript로 작성되며 페이지 전환이 일어나는 페이지
		  : Back-end 영역에서 데이터가 임의로 HTML페이지에 포함됨

-------------------------------------------------------------------------------

2. /front/02_link/  요청 처리
- 함수명 : linkView
- html명 : 02_link.html
- 사용할 html 위치 : html 폴더 하위에 02_link.html 생성하여 사용
- 응답 내용 : "02_link 페이지 입니다."
- frontapp의 index.html에서 [02_link 바로가기] 링크로 접근하기
- 02_link.html 페이지 가장 상단에는 [FrontApp 바로가기] 링크 생성

- 해당페이지 내에 아래링크 추가해서 페이지 처리하기
  [네이버 바로가기]
  [다음 바로가기]

-------------------------------------------------------------------------------

[자바스크립트 함수 생성]
- head 영역에 자바스크립트 영역을 만든 다음
  (body 영역 내에 만들어도 됩니다. 주로 head에 만들어서 사용하는 편입니다.)
- 해당 영역에 자바스크립트 프로그램을 작성합니다.
- 변수선언, 함수생성가능  
[자바스크립트 영역 생성하기]
* type : text 형태로 자바스크립트 코드를 작성하겠다는 의미입니다.
         : text 형태로 작성된 코드를 자바스크립트 라이브러리로 해석시킵니다.
         : 자바스크립트 라이브러리는 브라우저내에 있으며, 우리는 관여하지 않아도 됩니다.

-------------------------------------------------------------------------------

3. /front/03_css/  요청 처리
- 함수명 : cssView03
- html명 : html/03_css.html

4. /front/04_css/  요청 처리
- 함수명 : cssView04
- html명 : html/04_css.html

5. /front/05_css/  요청 처리
- 함수명 : cssView05
- html명 : html/05_css.html

6. /front/06_css/  요청 처리
- 함수명 : cssView06
- html명 : html/06_css.html
- 내용
* p태그 내에 태그를 적용해서 "FrontApp - 06_css Page" 표시
  -> p태그에 스타일 적용 : 배경은 검정, 글자는 노랑
* a태그, 내에 "[FrontApp 바로가기]" 표시
  -> 스타일 적용 : 글자색 노랑색

7. /front/07_table/  요청 처리
- 함수명 : tableView07
- html명 : html/07_table.html

8. /front/08_table/  요청 처리
- 함수명 : tableView08
- html명 : html/08_table.html

9. /front/09_table/  요청 처리
- 함수명 : tableView09
- html명 : html/09_table.html




















