** [수정처리] 클릭 시
- URL : /mysql/cart_update/
- html : 없음
- 수정 성공 시 : 상세 페이지로 이동
- 수정 실패 시 : 이전 페이지로 이동

** [삭제처리] 클릭 시
- URL : /mysql/cart_delete/
- html : 없음
- 누구에 대한 항목을 삭제하는지 정보를 전달해주어야 합니다.
- 수정 성공 시 : 목록 페이지로 이동
- 수정 실패 시 : 이전 페이지로 이동

--> 우선은 페이지가 잘 연결되는지만 처리
	HttpResponse ("누구에 대한 항목인지 출력")

** [주문내역 등록(입력)] 버튼 클릭 시
- URL : /mysql/cart_insert_view/
- 함수 : getCartInsertView
- html명 : cart_insert_view.html
- 버튼 : [취소], [저장] 2개 버튼 생성
- 입력내용 : 주문번호, 주문자아이디, 주문상품번호, 주문수량
- 전송방식은 post 방식으로

--> [취소] 버튼 클릭하면 목록 페이지로 이동
--> [저장] 버튼 클릭하면 아래 처리

*** 저장처리
- URL : /mysql/cart_insert/
- 함수 : getCartInsert
- html : 없음 

- DB에 저장 처리하기
  Cart.objects.create(저장할 변수 = 저장할 값) / 양식을 지켜서 넣어야함

저장 성공 메세지 띄우고 목록 페이지로 이동

*** 웹에서 처리하는 모든 행위는 입력/수정/삭제/조회를 주로 합니다.
- 기본적으로 Database와 연동하여 사용됩니다.
- 입력(Create), 수정(Update), 삭제(Delete), 조회(Read)
   보통 CRUD라고 칭합니다.
- 기본적으로 html페이지 4개, 벡엔드 함수 7개가 필요합니다.
- 입력/수정/삭제의 경우에는 벡엔트 처리가 별도로 진행됩니다.
- html페이지 : 전체조회, 상세조회, 입력화면, 수정화면