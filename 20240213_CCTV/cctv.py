# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'cctv.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sqlite3
import cv2


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(400, 400)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(0, 0, 400, 400))
        self.label.setObjectName("label_4")
        self.label.setPixmap(QtGui.QPixmap("cctv.jpg"))
        
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(100, 350, 75, 23))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.pressed.connect(self.cctv)
        self.pushButton.setStyleSheet("color: white; background-color: rgba(0, 0, 0, 0.0);")
        
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(220, 350, 75, 23))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.setStyleSheet("color: white; background-color: rgba(0, 0, 0, 0.0);")
         
        self.pushButton_2.pressed.connect(self.close)
        
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(115, 305, 210, 18))
        self.lineEdit.setObjectName("lineEdit")
        
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        
        
    def cctv(self):
        con = sqlite3.connect("cctv.db")
        cur = con.cursor()
        cur.execute("SELECT RTSP FROM cctv WHERE ID = '" + str(self.lineEdit.text()) + "'")
        result = cur.fetchone()
        
        image_files = result[0]
        count = 0
        cap = cv2.VideoCapture(image_files)
        while cap.isOpened():
            ret1, img = cap.read()
            if ret1:
                cv2.imshow(image_files, img)
                cv2.waitKey(15)
                count += 1
            key = cv2.waitKey(15)
            if cv2.getWindowProperty(image_files, cv2.WND_PROP_VISIBLE) < 1:
                break

        else:
            print("can not")
        cap.release()
        cv2.destroyAllWindows()
        
        con.close()
        
    def close(self):
        cv2.destroyAllWindows()
        self.stop = 1
        
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
